{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Neighbors Documentation","text":""},{"location":"#who-is-this-for","title":"Who is this for?","text":"<p>This page is purely for developers of the Roblox game \"Neighbors\"</p>"},{"location":"Developer%20Handbook/1/","title":"Welcome!","text":"<p>Welcome to the Neighbors development team. This document outlines how we do things, what we expect from you, and other important pieces of information. Feel free to ask any questions.</p>"},{"location":"Developer%20Handbook/2/","title":"Expectations &amp; General Responsibilities","text":"<p>As a developer @ Neighbors, we expect you to be fully responsible for your work. As we are a small team, every contribution to the game is significant and noticeable.</p> <p>Other expectations include: Being communicative. This means keeping everyone updated on your work, any problems you\u2019re facing, etc. If you are out sick for example, please let your manager know as soon as possible. Making sure your work is high quality &amp; to the best of your ability. Don\u2019t send in half-assed work. Being on time &amp; diligent.</p>"},{"location":"Developer%20Handbook/3/","title":"How We Work","text":"<p>We utilize both Discord &amp; Trello to keep everyone on the same page. We don\u2019t have any real meetings (voice calls) but there may be small discussions once in a while in the appropriate channels.</p> <p>There are two Trello boards to keep track of the development board &amp; the ideas board. The ideas board is self-explanatory, it's a board where you can add any of your ideas for the game. Feel free to also add ideas you personally like from #suggestions to this board.</p> <p>The development board is used to keep track of all of the tasks to be completed that week. You\u2019ll use this board to see what you need to work on &amp; what the current state of the project is.</p>"},{"location":"Developer%20Handbook/4/","title":"Payment","text":"<p>Payment is done weekly every Friday based on the total number of hours since the last payment.</p> <p>If you feel you are payed the incorrect amount, reach out to your manager</p>"},{"location":"Developer%20Handbook/5/","title":"Updates","text":"<p>Updates occur every TWO weeks on Friday.</p> <p>All tasks need to be completed by the end of Wednesday of the update week. Thursday and Friday are days when any final testing or last-minute changes can occur.</p>"},{"location":"Developer%20Handbook/6/","title":"Benefits","text":"<p>As a developer, you are naturally given some perks.</p> <p>Benefits</p> <ul> <li>Competitive pay &amp; flexible hours. No meetings, no set hours, and nothing too formal.</li> <li>Admin Commands - some fun commands as well. However, these should not be abused.</li> <li>An exclusive Developer title.</li> <li>A say in where the game goes. Your work directly impacts the game significantly, you can visibly see your contributions in the game, unlike other larger games.</li> <li>Real experience. We hope to make everyone (including ourselves) better at making games so that in the future, we may partake in bigger projects.</li> </ul>"},{"location":"Developer%20Handbook/7/","title":"Additional","text":"<p>If you have any issues preventing you from finishing your tasks on time, let your manager know as soon as possible. Don\u2019t wait last minute.</p>"},{"location":"Developer%20Handbook/Development%20Board/1/","title":"Lists &amp; Their Usage","text":"<p>Backlog</p> <p>These are tasks planned for the future. You don\u2019t have to worry about this.</p> <p>Todo</p> <p>These are tasks that are to be completed this week. You will find your tasks in this section so keep an eye out.</p> <p>In-Progress / Doing</p> <p>These are tasks that are currently being worked on.</p> <p>QA</p> <p>These are tasks that are in the testing phase. Once they are fully tested and shown to have no bugs will they finally move out of this list.</p> <p>Completed</p> <p>These are fully tested &amp; done tasks. Only after QA testing is completed can these tasks be moved here.</p>"},{"location":"Developer%20Handbook/Development%20Board/2/","title":"Process","text":"<p>On Monday, the task board should be repopulated with new tasks. You can find tasks assigned to you by looking inside the to-do list and seeing which ones have your profile picture attached to them.</p> <p>On the same day, your manager will tell you what you should work on &amp; prioritize. You can view additional information about the task by clicking on the task card. </p> <p>You should now follow the process:</p> <p>Steps to take</p> <ul> <li> <p>When you want to start working on a task, move the card (the task) to the In-Progress list. </p> <ul> <li>Make sure you start the timer inside the card so that your time can be accounted for. Stop the timer when you are taking a break or no longer working on the task.</li> </ul> </li> <li> <p>Once you\u2019re finished with the task, move the card to QA and notify your manager that you\u2019re finished. </p> </li> <li> <p>Go to #tester-chat and tag the testers. Your task will be tested by QA for any bugs and/or tweaks to be made.</p> </li> <li> <p>Let them know if there are any specific things you want to be tested.</p> </li> <li> <p>Work closely with QA and make sure any issues are resolved.</p> </li> <li> <p>When the task is fully tested and shown to be bug-free, move it to Completed.</p> </li> <li> <p>Follow the process above for each task assigned to you.</p> </li> </ul>"},{"location":"General/Attributes/Character_Attributes/","title":"Character Attributes","text":"<p>Attributes in the Player's Character Model.</p> <p>Some of them can be custom and have no static purpose.</p> <p>Warning</p> <p>Not all are listed, and NOT all of them are available at the beginning.</p>"},{"location":"General/Attributes/Character_Attributes/#ragdoll","title":"<code>Ragdoll</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Character_Attributes/#description","title":"Description","text":"<p>If set to <code>true</code>, the player is ragdolled.</p>"},{"location":"General/Attributes/Character_Attributes/#ragdolltime","title":"<code>RagdollTime</code>","text":"<p>Type: <code>number</code></p>"},{"location":"General/Attributes/Character_Attributes/#description_1","title":"Description","text":"<p>Info</p> <p>Attributes like these are auto-generated by <code>Utility:ChangeStat()</code> to track duration. There are more of these."},{"location":"General/Attributes/Character_Attributes/#tripped","title":"<code>Tripped</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Character_Attributes/#description_2","title":"Description","text":"<p>If set to <code>true</code>, the player is tripped, they can't control their character.</p> <p>Combining this with <code>Ragdoll</code>, causes Ragdoll with no character control.</p>"},{"location":"General/Attributes/Character_Attributes/#barberkey","title":"<code>BarberKey</code>","text":"<p>Type: <code>number</code></p>"},{"location":"General/Attributes/Character_Attributes/#description_3","title":"Description","text":"<p>Note</p> <p>Probably not such a good way. This value is for the cut duration. If you'd use the Hair Clipper on someone. BarberKey goes on 1. After 2 minutes it will check if BarberKey is on 1, and then restore the original hats. But if it's not, it means someone updated it.</p>"},{"location":"General/Attributes/Character_Attributes/#blinded","title":"<code>Blinded</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Character_Attributes/#description_4","title":"Description","text":"<p>Whether is Blinded.</p>"},{"location":"General/Attributes/Character_Attributes/#boogiebombdancing","title":"<code>BoogieBombDancing</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Character_Attributes/#description_5","title":"Description","text":"<p>Whether is Boogie Bomb Dancing. (This disables inventory access if <code>true</code>)</p>"},{"location":"General/Attributes/Character_Attributes/#carried","title":"<code>Carried</code>","text":"<p>Type: <code>string</code></p>"},{"location":"General/Attributes/Character_Attributes/#description_6","title":"Description","text":"<p>This is present on a player character that is being carried (e.g. Handcuffs). It holds the username of the player that is carrying someone. Carried disables </p> <p>Note</p> <p>If they're no longer being carried, it just goes to <code>false</code>, which is not good. Changes something with collisions, removing them all somehow.</p>"},{"location":"General/Attributes/Character_Attributes/#carriedtype","title":"<code>CarriedType</code>","text":"<p>Type: <code>string</code></p>"},{"location":"General/Attributes/Character_Attributes/#description_7","title":"Description","text":"<p>Type of Carry. Present on the player that is being carried. Used to handle what happens after a carry. Can be <code>nil</code>.</p> <p>Named after Module scripts, located in a folder at <code>ServerStorage.Modules.Tools.Carry.Types</code>.</p>"},{"location":"General/Attributes/Character_Attributes/#types","title":"Types","text":"<ul> <li>Default (Carry)</li> <li>Handcuffs</li> <li>Shoulder</li> <li>Throw</li> <li>Choke (Superhuman Grab)</li> <li>Pitchfork</li> </ul>"},{"location":"General/Attributes/Character_Attributes/#carrying","title":"<code>Carrying</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Character_Attributes/#description_8","title":"Description","text":"<p>This is present on a player character that is carrying another player (e.g. with Handcuffs).</p> <p>Note</p> <p>Sometimes this is a string, but aslong it's not any <code>false</code>, it should return <code>true</code>.</p>"},{"location":"General/Attributes/Character_Attributes/#frozentool","title":"<code>FrozenTool</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Character_Attributes/#description_9","title":"Description","text":"<p>Whether a Player is frozen or not. If on <code>true</code> player can't be re-frozen or lasso'd.</p>"},{"location":"General/Attributes/Character_Attributes/#growthscale","title":"<code>GrowthScale</code>","text":"<p>Type: <code>number</code></p> <p>Note</p> <p>Breaks the track of the scale if you change this anyways.</p>"},{"location":"General/Attributes/Character_Attributes/#immune","title":"<code>Immune</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Character_Attributes/#inactivity","title":"<code>InActivity</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Character_Attributes/#description_10","title":"Description","text":"<p>If the player character is in an activity, like \"Arm Wrestle\". If <code>true</code>, this will hide the Skip buttons and other Activity prompts.</p>"},{"location":"General/Attributes/Character_Attributes/#jitter","title":"<code>Jitter</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Character_Attributes/#description_11","title":"Description","text":"<p>Whether tased or not. If <code>true</code> prevents from being tased again.</p>"},{"location":"General/Attributes/Character_Attributes/#network","title":"<code>Network</code>","text":"<p>Type: <code>string</code></p>"},{"location":"General/Attributes/Character_Attributes/#description_12","title":"Description","text":"<p>The current person that is controlling this Player's network. Points to the player that is currently having Network Ownership the specific character.</p> <p>Note</p> <p>This attribute is most likely controlled by a script that is overwatching it.</p>"},{"location":"General/Attributes/Character_Attributes/#tied","title":"<code>Tied</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Character_Attributes/#description_13","title":"Description","text":"<p>Whether the character is tied. If <code>true</code> inventory access is disabled. Related to the Lasso Tool.</p>"},{"location":"General/Attributes/Character_Attributes/#propmorphed","title":"<code>PropMorphed</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Character_Attributes/#propvisibility","title":"<code>PropVisibility</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Character_Attributes/#vr","title":"<code>VR</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Player_Attributes/","title":"Player Attributes","text":"<p>Roblox Attributes.</p>"},{"location":"General/Attributes/Player_Attributes/#player","title":"Player","text":"<p>Attributes put inside the Player Instance.</p> <p>Warning</p> <p>Not all are listed!</p>"},{"location":"General/Attributes/Player_Attributes/#adminspectating","title":"<code>AdminSpectating</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Player_Attributes/#description","title":"Description","text":"<p>A tweak to unforce your camera to be at places if set to <code>true</code>. A client-side based attribute.</p>"},{"location":"General/Attributes/Player_Attributes/#allowpartyinvitesfromall","title":"<code>AllowPartyInvitesFromAll</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_1","title":"Description","text":"<p>Player allows party invites from non-friends.</p>"},{"location":"General/Attributes/Player_Attributes/#avatardeco","title":"<code>AvatarDeco</code>","text":"<p>Type: <code>string</code></p>"},{"location":"General/Attributes/Player_Attributes/#avatarid","title":"<code>AvatarId</code>","text":"<p>Type: <code>number</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_2","title":"Description","text":"<p>Profile Bio picture image ID.</p>"},{"location":"General/Attributes/Player_Attributes/#bgdeco","title":"<code>BGDeco</code>","text":"<p>Type: <code>string</code></p>"},{"location":"General/Attributes/Player_Attributes/#bannerdeco","title":"<code>BannerDeco</code>","text":"<p>Type: <code>string</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_3","title":"Description","text":"<p>String ID representation of the Player's selected Banner Decoration.</p>"},{"location":"General/Attributes/Player_Attributes/#credits","title":"<code>Credits</code>","text":"<p>Type: <code>number</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_4","title":"Description","text":"<p>Player Credits.</p>"},{"location":"General/Attributes/Player_Attributes/#currentinternalmap","title":"<code>CurrentInternalMap</code>","text":"<p>Type: <code>string</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_5","title":"Description","text":"<p>Contains the name of the Player's current Place. Can be used to find out where a Player's current queued house is at. If the Player isn't in a house (e.g. soloqueued, in-queue or other modifications) it will be <code>nil</code>.</p> <p>Info</p> <p>Changing this value only for the Client will load the props inside a house. Changing this value on the Server will change the house the player is supposed to be in. If the player is not exempt from the anti-cheat, they will be reset.</p> <p>Warning</p> <p>Can be <code>nil</code>, in this case empty string <code>\"\"</code>.</p>"},{"location":"General/Attributes/Player_Attributes/#dataloaded","title":"<code>DataLoaded</code>","text":"<p>TODO</p> <p>Wat is this</p>"},{"location":"General/Attributes/Player_Attributes/#disablecars","title":"<code>DisableCars</code>","text":"<p>TODO</p> <p>Wat is this</p>"},{"location":"General/Attributes/Player_Attributes/#disablecomments","title":"<code>DisableComments</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_6","title":"Description","text":"<p>If set to <code>true</code>, nobody can submit a comment on that Player's Bio.</p>"},{"location":"General/Attributes/Player_Attributes/#disablepartyinvites","title":"<code>DisablePartyInvites</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_7","title":"Description","text":"<p>Whether a Player has Party Invites enabled or not.</p>"},{"location":"General/Attributes/Player_Attributes/#disablevrragdoll","title":"<code>DisableVRRagdoll</code>","text":"<p>TODO</p> <p>Wat happens if this is true or something</p>"},{"location":"General/Attributes/Player_Attributes/#disabled","title":"<code>Disabled</code>","text":"<p>TODO</p> <p>WHAT IS THIS USED FOR Someone use CTRL + F in Studio and look for <code>\"Disabled\"</code> and lemme know</p>"},{"location":"General/Attributes/Player_Attributes/#doublestar","title":"<code>DoubleStar</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Player_Attributes/#exemptfromanticheat","title":"<code>ExemptFromAntiCheat</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_8","title":"Description","text":"<p>Whether a player's anti-cheat is disabled.</p>"},{"location":"General/Attributes/Player_Attributes/#exemptfromgrass","title":"<code>ExemptFromGrass</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_9","title":"Description","text":"<p>Whether a player can walk on grass.</p>"},{"location":"General/Attributes/Player_Attributes/#eightbitpack","title":"<code>EightBitPack</code>","text":"<p>Warning</p> <p>If more Packs are added, the Attributes of the Player will be doomed. Someone move this somewhere else \ud83d\ude2d\ud83d\ude2d\ud83d\ude2d</p>"},{"location":"General/Attributes/Player_Attributes/#extraslots","title":"<code>ExtraSlots</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_10","title":"Description","text":"<p>Gamepass, gives more inventory slots.</p>"},{"location":"General/Attributes/Player_Attributes/#extraslots2","title":"<code>ExtraSlots2</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_11","title":"Description","text":"<p>Gamepass.</p>"},{"location":"General/Attributes/Player_Attributes/#firsttimejoining","title":"<code>FirstTimeJoining</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_12","title":"Description","text":"<p>Whether the Player joined for the first time. Probably for the tutorial on the buttons.</p>"},{"location":"General/Attributes/Player_Attributes/#friend","title":"<code>Friend</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Player_Attributes/#hidegraffiti","title":"<code>HideGraffiti</code>","text":"<p>Type: <code>boolean</code></p> <p>TODO</p> <p>Does this hide ALL Graffiti, with no issues?</p>"},{"location":"General/Attributes/Player_Attributes/#hidehours","title":"<code>HideHours</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_13","title":"Description","text":"<p>Whether a Player's house should be hidden from the Profile Bio.</p>"},{"location":"General/Attributes/Player_Attributes/#idleposition","title":"<code>IdlePosition</code>","text":"<p>Type: <code>Vector3</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_14","title":"Description","text":"<p>The Player's Idle Position, that is usually very high in the Sky, on Y Level: <code>4000</code></p>"},{"location":"General/Attributes/Player_Attributes/#invehicletool","title":"<code>InVehicleTool</code>","text":"<p>TODO</p> <p>wat is this</p>"},{"location":"General/Attributes/Player_Attributes/#infiniteskips","title":"<code>InfiniteSkips</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_15","title":"Description","text":"<p>Whether the Player has infinite skips.</p>"},{"location":"General/Attributes/Player_Attributes/#infiniteslots","title":"<code>InfiniteSlots</code>","text":"<p>Type: <code>boolean</code></p> <p>TODO</p> <p>is this for party invite slots, or inventory?</p>"},{"location":"General/Attributes/Player_Attributes/#intoxication","title":"<code>Intoxication</code>","text":"<p>Type: <code>number</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_16","title":"Description","text":"<p>Something for the 17+ game. Drunk Effect.</p> <p>Note</p> <p>Expected values are <code>0</code> up to <code>1</code>.</p>"},{"location":"General/Attributes/Player_Attributes/#invisible","title":"<code>Invisible</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_17","title":"Description","text":"<p>If <code>true</code> hides nametag.</p> <p>Note</p> <p>Unsure.</p>"},{"location":"General/Attributes/Player_Attributes/#lastreward","title":"<code>LastReward</code>","text":"<p>Type: <code>number</code> (UNIX Timestamp)</p>"},{"location":"General/Attributes/Player_Attributes/#description_18","title":"Description","text":"<p>A Player's last daily reward redeem.</p> <p>Another attribute with similar purpose would be <code>LastSantaVisit</code>.</p>"},{"location":"General/Attributes/Player_Attributes/#loaded","title":"<code>Loaded</code>","text":"<p>Note</p> <p>wat is this</p>"},{"location":"General/Attributes/Player_Attributes/#matchstart","title":"<code>MatchStart</code>","text":"<p>Type: <code>number</code></p> <p>Note</p> <p>it's in some time value, but idk which one????</p> <p>Warning</p> <p>Doesn't always exist. Can be <code>nil</code>.</p>"},{"location":"General/Attributes/Player_Attributes/#matchtarget","title":"<code>MatchTarget</code>","text":"<p>Type: <code>string</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_19","title":"Description","text":"<p>The player's username that they queued up with.</p> <p>Note</p> <p>If it's natural soloqueue, they'd be queued up with themselves. NOT to be confused with <code>soloqueue</code> command.</p> <p>Warning</p> <p>Doesn't always exist. Can be <code>nil</code>.</p>"},{"location":"General/Attributes/Player_Attributes/#megaparty","title":"<code>MegaParty</code>","text":"<p>Type: <code>number</code></p> <p>Note</p> <p>unsure</p>"},{"location":"General/Attributes/Player_Attributes/#micenabled","title":"<code>MicEnabled</code>","text":"<p>Warning</p> <p>This doesn't do anything...</p>"},{"location":"General/Attributes/Player_Attributes/#mutemusic","title":"<code>MuteMusic</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_20","title":"Description","text":"<p>Whether Player has loading screen Music muted. <code>true</code> means it's muted.</p>"},{"location":"General/Attributes/Player_Attributes/#mutetoolsounds","title":"<code>MuteToolSounds</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_21","title":"Description","text":"<p>Whether Tool Sounds are muted.</p> <p>TODO</p> <p>Technical setup for the tools for this to work</p>"},{"location":"General/Attributes/Player_Attributes/#muteweather","title":"<code>MuteWeather</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_22","title":"Description","text":"<p>Whether Weather is muted.</p>"},{"location":"General/Attributes/Player_Attributes/#outfitselector","title":"<code>OutfitSelector</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_23","title":"Description","text":"<p>Whether Player has access to the Outfit Selector Gamepass.</p>"},{"location":"General/Attributes/Player_Attributes/#partyid","title":"<code>PartyId</code>","text":"<p>Type: <code>number</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_24","title":"Description","text":"<p>The PartyId the player is in. Which is someone's UserId, e.g. the Party Leader. The player doesn't have this if they're not in a party.</p>"},{"location":"General/Attributes/Player_Attributes/#playerinvites","title":"<code>PlayerInvites</code>","text":"<p>Type: <code>number</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_25","title":"Description","text":"<p>A Player's Roblox game invite count.</p>"},{"location":"General/Attributes/Player_Attributes/#points","title":"<code>Points</code>","text":"<p>Type: <code>number</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_26","title":"Description","text":"<p>A Player's Profile Points value.</p>"},{"location":"General/Attributes/Player_Attributes/#profilecolors","title":"<code>ProfileColors</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_27","title":"Description","text":"<p>If a Player can modify their Profile Bio Colors.</p>"},{"location":"General/Attributes/Player_Attributes/#protected","title":"<code>Protected</code>","text":"<p>Type: <code>number</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_28","title":"Description","text":"<p>Whether the Player can be affected by Tools. (you may find some tools just to work)</p> <p>Player's that have this on <code>true</code> can be identified based on their nametag.</p> <p></p>"},{"location":"General/Attributes/Player_Attributes/#pushtotalk","title":"<code>PushToTalk</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_29","title":"Description","text":"<p>Info</p> <p>Reserved</p>"},{"location":"General/Attributes/Player_Attributes/#safezone","title":"<code>Safezone</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Player_Attributes/#showowntag","title":"<code>ShowOwnTag</code>","text":"<p>Type: <code>boolean</code></p> <p>Note</p> <p>I forgor a little bit and unsure if client will make this show only, or if set by server</p>"},{"location":"General/Attributes/Player_Attributes/#showprofileonspawn","title":"<code>ShowProfileOnSpawn</code>","text":"<p>Type: <code>boolean</code></p> <p>Note</p> <p>Why are all settings in the Player's Attributes</p>"},{"location":"General/Attributes/Player_Attributes/#showtitle","title":"<code>ShowTitle</code>","text":"<p>Type: <code>boolean</code></p> <p>Note</p> <p>Does this even work?</p>"},{"location":"General/Attributes/Player_Attributes/#special","title":"<code>Special</code>","text":"<p>Type: <code>boolean</code></p> <p>Note</p> <p>No clue what this is</p>"},{"location":"General/Attributes/Player_Attributes/#spins","title":"<code>Spins</code>","text":"<p>Type: <code>number</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_30","title":"Description","text":"<p>TODO</p>"},{"location":"General/Attributes/Player_Attributes/#state","title":"<code>State</code>","text":"<p>Type: <code>number</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_31","title":"Description","text":"<p>A client-side based control for the Player. This is used to manage the behaviour of the Player. e. g. if they should see the loading screen or not.</p> <p>Info</p> <p>Changes to this value will update behaviour. See the description below.</p>"},{"location":"General/Attributes/Player_Attributes/#states","title":"States","text":"Value Name Description 1 Idle (No Activity) Player sees the loading screen and is not in any queue. 2 In-Queue Player is in the queue and in the loading screen. 3 Queued up Player can see their own character and control their camera."},{"location":"General/Attributes/Player_Attributes/#streak","title":"<code>Streak</code>","text":"<p>Type: <code>number</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_32","title":"Description","text":"<p>The daily reward Streak. Not claiming a Daily Reward, would reset the daily reward streak.</p>"},{"location":"General/Attributes/Player_Attributes/#streamermode","title":"<code>StreamerMode</code>","text":"<p>Type: <code>boolean</code></p> <p>Note</p> <p>I think just hides leaderboard</p>"},{"location":"General/Attributes/Player_Attributes/#title","title":"<code>Title</code>","text":"<p>Type: <code>string</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_33","title":"Description","text":"<p>A representation of the current string.</p> <p>Note</p> <p>It's a mystery whether, Titles have an ID or just name.</p> <p>Warning</p> <p>Setting this value does not resolve into Custom Titles, such like \"Boogle\", which is <code>boogle</code>.</p>"},{"location":"General/Attributes/Player_Attributes/#uptodate","title":"<code>UpToDate</code>","text":"<p>Type: <code>boolean</code></p> <p>Note</p> <p>checks your Windows Updates (no)</p>"},{"location":"General/Attributes/Player_Attributes/#usemasculinetitles","title":"<code>UseMasculineTitles</code>","text":"<p>Type: <code>boolean</code></p> <p>Note</p> <p>have not experimented</p>"},{"location":"General/Attributes/Player_Attributes/#vconly","title":"<code>VCOnly</code>","text":"<p>Type: <code>boolean</code></p> <p>Note</p> <p>????</p>"},{"location":"General/Attributes/Player_Attributes/#vconly2","title":"<code>VCOnly2</code>","text":"<p>Type: <code>boolean</code></p> <p>Note</p> <p>????</p>"},{"location":"General/Attributes/Player_Attributes/#verified","title":"<code>Verified</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_34","title":"Description","text":"<p>Shows a star next to a player if set on <code>true</code>, along with playing a sound when opening their Profile Bio.</p>"},{"location":"General/Attributes/Player_Attributes/#voicechatenabled","title":"<code>VoiceChatEnabled</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Player_Attributes/#description_35","title":"Description","text":"<p>An automatic assigned value upon Player join. This will determine whether in a Profile Bio, it should show a \ud83d\udd07 icon or not, for Player's that got Mic Suspended or have it turned off. Player's that have this on <code>false</code> can't hear others nor use mic.</p>"},{"location":"General/Attributes/Workspace_Attributes/","title":"Workspace Attributes","text":"<p>Attributes set directly in Workspace.</p> <p>Warning</p> <p>Not all of them might be listed, and NOT all of them are available at the beginning.</p>"},{"location":"General/Attributes/Workspace_Attributes/#placeloaded","title":"<code>PlaceLoaded</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Workspace_Attributes/#description","title":"Description","text":"<p>Set by the <code>Controller</code> Module, for \"Neighborhood\" gamemode.</p>"},{"location":"General/Attributes/Workspace_Attributes/#night","title":"<code>Night</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Workspace_Attributes/#description_1","title":"Description","text":"<p>Used for a script that would turn the world to Night, but only when ran.</p>"},{"location":"General/Attributes/Workspace_Attributes/#notoxictools","title":"<code>NoToxicTools</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Workspace_Attributes/#realservertype","title":"<code>RealServerType</code>","text":"<p>Type: <code>string</code></p>"},{"location":"General/Attributes/Workspace_Attributes/#serverisvc","title":"<code>ServerIsVC</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Workspace_Attributes/#servername","title":"<code>ServerName</code>","text":"<p>Type: <code>string</code></p>"},{"location":"General/Attributes/Workspace_Attributes/#servertype","title":"<code>ServerType</code>","text":"<p>Type: <code>string</code></p>"},{"location":"General/Attributes/Workspace_Attributes/#serverloaded","title":"<code>ServerLoaded</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Workspace_Attributes/#worldloaded","title":"<code>WorldLoaded</code>","text":"<p>Type: <code>boolean</code></p>"},{"location":"General/Attributes/Workspace_Attributes/#description_2","title":"Description","text":"<p>The <code>WorldLoader</code> Script sets this value, after determining which world to load, e.g. Neighborhood, Sandbox and etc. Once that is determined and loaded, <code>WorldLoaded</code> gets set to <code>true</code>.</p>"},{"location":"General/Attributes/Workspace_Attributes/#version","title":"<code>Version</code>","text":"<p>Type: <code>string</code></p>"},{"location":"General/Modules/ReplicatedStorage/HintService/","title":"HintService","text":"<p>Info</p> <p><code>game.ReplicatedStorage.Modules.HintService</code></p> <p>This seems to be the Module that creates the pop-ups, e.g. the ones from Party Invites. A LocalScript named <code>PromptHandler</code> listens to <code>Prompt</code>.</p>"},{"location":"General/Modules/ReplicatedStorage/Holiday/","title":"Holiday","text":"<p>Info</p> <p><code>game.ReplicatedStorage.Modules.Holiday</code></p>"},{"location":"General/Modules/ReplicatedStorage/Holiday/#getcurrentholiday","title":"<code>:GetCurrentHoliday()</code>","text":"<p>Checks <code>game.ReplicatedStorage.Assets.Data.HolidayInfo</code> and retrieves whether the real world time is matching a Holiday. Note that those Holidays are pre-defined and don't match every actual existing Holiday.</p>"},{"location":"General/Modules/ReplicatedStorage/Holiday/#returns","title":"Returns","text":"<ul> <li>Current Holiday info table or <code>nil</code>.</li> </ul>"},{"location":"General/Modules/ReplicatedStorage/Ragdoll/","title":"Ragdoll","text":"<p>Info</p> <p><code>game.ReplicatedStorage.Modules.Ragdoll</code></p> <p>Not really to be compared with the one from <code>ServerStorage</code>.</p> <p>This Module responds to Attributes like <code>Network</code>, <code>Ragdoll</code> and etc. under the Character.</p> <p>Info</p> <p>This is not complete.</p>"},{"location":"General/Modules/ReplicatedStorage/Server/","title":"Server","text":"<p>Info</p> <p><code>game.ReplicatedStorage.Modules.Server</code></p> <p>Server utilities that server and client can use.</p>"},{"location":"General/Modules/ReplicatedStorage/Server/#istestserver","title":"<code>:IsTestServer()</code>","text":"<p>Whether the game is the PlaceId of the TEST game.</p>"},{"location":"General/Modules/ReplicatedStorage/Server/#returns","title":"Returns","text":"<ul> <li><code>boolean</code></li> </ul>"},{"location":"General/Modules/ReplicatedStorage/Server/#getrealservertype","title":"<code>:GetRealServerType()</code>","text":"<p>Gets the <code>RealServerType</code> attribute from Workspace. For some reason these can YIELD, if the Attribute doesn't exist, because it waits.</p>"},{"location":"General/Modules/ReplicatedStorage/Server/#returns_1","title":"Returns","text":"<ul> <li>Result from <code>workspace:GetAttribute(RealServerType)</code></li> </ul>"},{"location":"General/Modules/ReplicatedStorage/Server/#getservertype","title":"<code>:GetServerType</code>","text":"<p>Similar, but gets the <code>ServerType</code> attribute.</p>"},{"location":"General/Modules/ReplicatedStorage/Server/#isvcserver","title":"<code>:IsVCServer</code>","text":"<p>Similar, but this doesn't yield and gets the <code>ServerIsVC</code> attribute.</p>"},{"location":"General/Modules/ReplicatedStorage/Server/#isadultserver","title":"<code>:IsAdultServer()</code>","text":"<p>Whether the game is the 17+ Place Id.</p>"},{"location":"General/Modules/ReplicatedStorage/Server/#returns_2","title":"Returns","text":"<ul> <li><code>boolean</code></li> </ul>"},{"location":"General/Modules/ReplicatedStorage/Title/","title":"Title","text":"<p>Info</p> <p><code>game.ReplicatedStorage.Modules.Title</code></p>"},{"location":"General/Modules/ReplicatedStorage/Title/#constructplayer-player-tag-titlename","title":"<code>:Construct(player: Player, tag, titleName)</code>","text":""},{"location":"General/Modules/ReplicatedStorage/Title/#parameters","title":"Parameters","text":"<ul> <li><code>tag</code>, could be a <code>BillboardGui</code> or a <code>Frame</code>.</li> <li><code>titleName</code>, name of the title matching the title data.</li> </ul>"},{"location":"General/Modules/ReplicatedStorage/Title/#constructwithinfoplayer-player-tag-titleinfo","title":"<code>:ConstructWithInfo(player: Player, tag, titleInfo)</code>","text":""},{"location":"General/Modules/ReplicatedStorage/Title/#paramteres","title":"Paramteres","text":"<ul> <li><code>titleInfo</code>, the title info</li> </ul>"},{"location":"General/Modules/ReplicatedStorage/VR/","title":"VR","text":"<p>Info</p> <p><code>game.ReplicatedStorage.Modules.VR</code></p> <p>VR utilities.</p> <p>Has a <code>Heartbeat</code> Connection that changes data in its own table called <code>velocities</code>.</p>"},{"location":"General/Modules/ReplicatedStorage/VR/#gethandpositionuser_cframe-enumusercframe","title":"<code>:GetHandPosition(user_CFrame: Enum.UserCFrame)</code>","text":""},{"location":"General/Modules/ReplicatedStorage/VR/#returns","title":"Returns","text":"<ul> <li>Result from ``VRService:GetUserCFrame(user_CFrame).Position</li> </ul>"},{"location":"General/Modules/ReplicatedStorage/VR/#gethandvelocityuser_cframe-enumusercframe","title":"<code>:GetHandVelocity(user_CFrame: Enum.UserCFrame)</code>","text":""},{"location":"General/Modules/ReplicatedStorage/VR/#getrelativevectortoheadvector-vector3","title":"<code>:GetRelativeVectorToHead(vector: Vector3)</code>","text":""},{"location":"General/Modules/ReplicatedStorage/VR/#returns_1","title":"Returns","text":"<ul> <li>Result from <code>VRService:GetUserCFrame(Enum.UserCFrame.Head):VectorToObjectSpace(vector)</code></li> </ul>"},{"location":"General/Modules/ServerScriptService/Controller/","title":"Controller","text":"<p>Info</p> <p><code>game.ServerScriptService.Neighborhood.Controller</code></p> <p>This Module controls how things work in the Neighbors gamemode. e.g. setting states and matching people. Keeping track of occupied houses and etc.</p> <p>Note</p> <p>When this Module finished loading. The Workspace's Attribute <code>PlaceLoaded</code> gets set to <code>true</code>.</p>"},{"location":"General/Modules/ServerScriptService/Controller/#getcontrollerplayersdatatable","title":"<code>:GetControllerPlayersDataTable()</code>","text":""},{"location":"General/Modules/ServerScriptService/Controller/#returns","title":"Returns","text":"<ul> <li>The players data table stored by the Controller. The data the Controller uses to process things.</li> </ul>"},{"location":"General/Modules/ServerScriptService/Controller/#matchplayerpairtogether","title":"<code>:MatchPlayerPairTogether()</code>","text":"<p>Matches two players together and reserves a house. This is also ran by <code>:Run()</code>.</p>"},{"location":"General/Modules/ServerScriptService/Controller/#sendplayergrouppairtoplaceplace-model-group1-group2","title":"<code>:SendPlayerGroupPairToPlace(place: Model, group1, group2)</code>","text":"<p>Sends groups to a House. This doesn't reserve a place or set it active.</p>"},{"location":"General/Modules/ServerScriptService/Controller/#setstateply-player-state-force-boolean","title":"<code>:SetState(ply: Player, state, force: boolean)</code>","text":"<p>Sets a Player's State, which also modifies the Player Attribute <code>State</code>.</p> <p>Note</p> <p>A list of states is found in the \"Player Attributes\" page.</p>"},{"location":"General/Modules/ServerScriptService/Controller/#getidlepositionply-player","title":"<code>:GetIdlePosition(ply: Player)</code>","text":"<p>Retrieves <code>.Spawn</code> from the local stored data. Same as <code>IdlePosition</code> attribute.</p> <p>If the player is in a party, the idle position of the party is returned by this function...</p>"},{"location":"General/Modules/ServerScriptService/Controller/#returns_1","title":"Returns","text":"<ul> <li>Should return the Idle Position that is located somewhere very high in the sky.</li> </ul>"},{"location":"General/Modules/ServerScriptService/Controller/#setmatchtargetply-player-targetply-player","title":"<code>:SetMatchTarget(ply: Player, targetPly: Player)</code>","text":"<p>Changes data and sets the attribute <code>MatchTarget</code>.</p>"},{"location":"General/Modules/ServerScriptService/Controller/#setactivemapply-player-map-model","title":"<code>:SetActiveMap(ply: Player, map: Model)</code>","text":"<p>Changes <code>data.Map</code> for the player's controller data.</p>"},{"location":"General/Modules/ServerScriptService/Controller/#getqueue","title":"<code>:GetQueue()</code>","text":"<p>Returns all queued players, aslong their Data is loaded and are in the \"Queue\" State.</p>"},{"location":"General/Modules/ServerScriptService/Controller/#returns_2","title":"Returns","text":"<ul> <li><code>table: {Player}</code> collection of Players.</li> </ul>"},{"location":"General/Modules/ServerScriptService/Controller/#getavailablemap","title":"<code>:GetAvailableMap()</code>","text":"<p>Returns an available \"Place\" map.</p>"},{"location":"General/Modules/ServerScriptService/Controller/#returns_3","title":"Returns","text":"<ul> <li><code>Model</code> of the map</li> </ul>"},{"location":"General/Modules/ServerScriptService/Controller/#getseatpairsn","title":"<code>:GetSeatPairs(n)</code>","text":""},{"location":"General/Modules/ServerScriptService/Controller/#returns_4","title":"Returns","text":"<ul> <li><code>table</code> of results</li> </ul>"},{"location":"General/Modules/ServerScriptService/Controller/#addblacklistply-player-targetply-player","title":"<code>:AddBlacklist(ply: Player, targetPly: Player)</code>","text":"<p>Info</p> <p>Unsure</p>"},{"location":"General/Modules/ServerScriptService/Controller/#passesvccheckply-player-targetply-player","title":"<code>:PassesVCCheck(ply: Player, targetPly: Player)</code>","text":"<p>Checks their Voice-Chat status. It's supposed to match if both have VC or not. But this functions just returns true.</p>"},{"location":"General/Modules/ServerScriptService/Controller/#returns_5","title":"Returns","text":"<ul> <li><code>boolean</code></li> </ul>"},{"location":"General/Modules/ServerScriptService/Controller/#getfilteredlistply-player-queue","title":"<code>:GetFilteredList(ply: Player, queue)</code>","text":"<p>Info</p> <p>Unsure</p>"},{"location":"General/Modules/ServerScriptService/Controller/#getblacklistcountply-player","title":"<code>:GetBlacklistCount(ply: Player)</code>","text":"<p>Gets the Blacklist count from a player.</p>"},{"location":"General/Modules/ServerScriptService/Controller/#returns_6","title":"Returns","text":"<ul> <li><code>number</code> count</li> </ul>"},{"location":"General/Modules/ServerScriptService/Controller/#getplayingcount","title":"<code>:GetPlayingCount()</code>","text":"<p>Gets the count of how many are \"in-queue\" and how many are \"matched\".</p>"},{"location":"General/Modules/ServerScriptService/Controller/#returns_7","title":"Returns","text":"<ul> <li><code>number</code></li> </ul>"},{"location":"General/Modules/ServerScriptService/Controller/#getmatchdurationply-player","title":"<code>:GetMatchDuration(ply: Player)</code>","text":"<p>Gets the match duration using subtraction based on the <code>MatchStart</code> attribute.</p>"},{"location":"General/Modules/ServerScriptService/Controller/#returns_8","title":"Returns","text":"<ul> <li><code>number</code> duration</li> </ul>"},{"location":"General/Modules/ServerScriptService/Controller/#getpotentialqueuesize","title":"<code>GetPotentialQueueSize()</code>","text":"<p>Info</p> <p>Unsure</p>"},{"location":"General/Modules/ServerScriptService/Controller/#returns_9","title":"Returns","text":"<ul> <li><code>number</code></li> </ul>"},{"location":"General/Modules/ServerScriptService/Controller/#hasreachedqueuelimitply-player","title":"<code>:HasReachedQueueLimit(ply: Player)</code>","text":"<p>Checks <code>data.QueueStart</code>. Unsure about the purpose.</p>"},{"location":"General/Modules/ServerScriptService/Controller/#returns_10","title":"Returns","text":"<ul> <li><code>boolean</code></li> </ul>"},{"location":"General/Modules/ServerScriptService/Controller/#getplayerpairqueue","title":"<code>:GetPlayerPair(queue)</code>","text":"<p>Gets a player pair and also removes them from the queue and then returns them.</p>"},{"location":"General/Modules/ServerScriptService/Controller/#returns_11","title":"Returns","text":"<ul> <li>A tuple, <code>player1, player2</code></li> </ul>"},{"location":"General/Modules/ServerScriptService/Controller/#resettargetply-player","title":"<code>:ResetTarget(ply: Player)</code>","text":"<p>Resets a target and puts them back into the \"in-queue\" State. Also uses <code>:AddBlacklist</code> for some reason.</p> <p>Info</p> <p>Unsure</p>"},{"location":"General/Modules/ServerScriptService/Controller/#getavailableseatplace-model","title":"<code>:GetAvailableSeat(place: Model)</code>","text":"<p>Gets an available seat in a Place.</p>"},{"location":"General/Modules/ServerScriptService/Controller/#returns_12","title":"Returns","text":"<ul> <li>A random seat from the result.</li> </ul>"},{"location":"General/Modules/ServerScriptService/Controller/#movetoseatply-player-seat","title":"<code>:MoveToSeat(ply: Player, seat)</code>","text":"<p>Makes a player sit on the seat.</p>"},{"location":"General/Modules/ServerScriptService/Controller/#run","title":"<code>:Run()</code>","text":"<p>Anyone that is in-queue will be put together eventually. The queue match algorithm needs at least two people to function. The only exception is Roblox Studio and the Test Game.</p> <p>Info</p> <p>Unsure</p>"},{"location":"General/Modules/ServerScriptService/Controller/#skipply-player","title":"<code>:Skip(ply: Player)</code>","text":"<p>Makes someone matched skip. Resets the target and puts them back into the queue.</p>"},{"location":"General/Modules/ServerScriptService/Controller/#gethousetype","title":"<code>:GetHouseType()</code>","text":"<p>Returns the House Type. Seems to be for house re-skins. This is used by <code>:GetHousePreset()</code></p>"},{"location":"General/Modules/ServerScriptService/Controller/#gethousepreset","title":"<code>:GetHousePreset()</code>","text":""},{"location":"General/Modules/ServerScriptService/Controller/#returns_13","title":"Returns","text":"<ul> <li><code>Model</code> of the house.</li> </ul>"},{"location":"General/Modules/ServerScriptService/Controller/#init","title":"<code>:Init()</code>","text":"<p>This is ran by the module itself.</p>"},{"location":"General/Modules/ServerScriptService/Controller/#getavailablespawn","title":"<code>:GetAvailableSpawn()</code>","text":"<p>Gets an available spawn. Unsure about the use. When a player leaves the game, their spawn gets made available.</p>"},{"location":"General/Modules/ServerScriptService/Controller/#returns_14","title":"Returns","text":"<ul> <li><code>Vector3</code> position.</li> </ul>"},{"location":"General/Modules/ServerScriptService/Controller/#registercharactercharacter-model","title":"<code>:RegisterCharacter(character: Model)</code>","text":"<p>Registers a character and puts the player in Idle state.</p> <p>When <code>PlayerAdded</code> this function gets called when <code>CharacterAdded</code> then gets invoked.</p>"},{"location":"General/Modules/ServerScriptService/Controller/#getplayersdatatable","title":"<code>:GetPlayersDataTable()</code>","text":""},{"location":"General/Modules/ServerScriptService/Controller/#returns_15","title":"Returns","text":"<ul> <li>A table with every player's data about the controller.</li> </ul>"},{"location":"General/Modules/ServerStorage/Achievement/","title":"Achievement","text":"<p>Info</p> <p><code>game.ServerStorage.Modules.Achievement</code></p> <p>This is responsible for managing Title data...</p> <p>Warning</p> <p>Incomplete</p>"},{"location":"General/Modules/ServerStorage/Achievement/#incrementtitletitlename-amount","title":"<code>:IncrementTitle(titleName, amount)</code>","text":""},{"location":"General/Modules/ServerStorage/Achievement/#stringtitle","title":"<code>:String(title)</code>","text":"<p>Seems to turn title with spaces into something.</p>"},{"location":"General/Modules/ServerStorage/Achievement/#awardtitleply-player-titlename-no_notif-boolean","title":"<code>:AwardTitle(ply: Player, titleName, no_notif: boolean)</code>","text":"<p>Awards a player a Title, and adds that into the Player's Stats under the <code>Titles</code> folder.</p>"},{"location":"General/Modules/ServerStorage/Achievement/#parameters","title":"Parameters","text":"<ul> <li><code>no_notif</code>, whether to notify the player</li> </ul>"},{"location":"General/Modules/ServerStorage/Achievement/#gettitleownerdata","title":"<code>:GetTitleOwnerData()</code>","text":""},{"location":"General/Modules/ServerStorage/Achievement/#sendupdatedtitleownerdata","title":"<code>:SendUpdatedTitleOwnerData()</code>","text":""},{"location":"General/Modules/ServerStorage/Activity/","title":"Activity","text":"<p>Info</p> <p><code>game.ServerStorage.Modules.Activity</code></p> <p>This is used for things like Arm Wrestling, but for some reason this is also not used by Arm Wrestling itself. </p> <p>Warning</p> <p>Incomplete</p>"},{"location":"General/Modules/ServerStorage/Activity/#newmodel-model","title":"<code>.new(model: Model)</code>","text":"<p>Constructor</p>"},{"location":"General/Modules/ServerStorage/Activity/#returns","title":"Returns","text":"<ul> <li>A new object from Activity.</li> </ul>"},{"location":"General/Modules/ServerStorage/Badge/","title":"Badge","text":"<p>Info</p> <p><code>game.ServerStorage.Modules.Badge</code></p> <p>A utility that can gets and award Badges, but also updates the Player's Stats for storage.</p>"},{"location":"General/Modules/ServerStorage/Badge/#doesplayerhavebadgeply-player-badgeid","title":"<code>:DoesPlayerHaveBadge(ply: Player, badgeId)</code>","text":""},{"location":"General/Modules/ServerStorage/Badge/#returns","title":"Returns","text":"<ul> <li>Can return <code>boolean</code></li> </ul>"},{"location":"General/Modules/ServerStorage/Badge/#addbadgeregistryply-player-badgeid","title":"<code>:AddBadgeRegistry(ply: Player, badgeId)</code>","text":"<p>Creates a <code>BoolValue</code> inside the Player's Stats, if they don't already have it.</p>"},{"location":"General/Modules/ServerStorage/Badge/#awardbadgeply-player-badgeid","title":"<code>:AwardBadge(ply: Player, badgeId)</code>","text":"<p>Awards a Badge if the player doesn't already have it in their Stats.</p> <p>Note</p> <p>This is probably not good if Badges get deleted from the inventory.</p>"},{"location":"General/Modules/ServerStorage/Client/","title":"Client","text":"<p>Info</p> <p><code>game.ServerStorage.Modules.Client</code></p> <p>Looks like a Module for the specialization of custom Roblox method usages. These contain hookable BindableEvents designed for the Server, for handling data.</p> <p>Info</p> <p>Should eventually be done differently?</p> <p>There's a StarterPlayerScript that is called <code>ClientReady</code>, which sends a RemoteEvent that is also called <code>ClientReady</code>.</p> <p>Once firing to that RemoteEvent, the server will attempt to retrieve the Player's \"Stats\" located in the <code>ServerStorage.Stats</code> folder.</p> <p>Once the Stats have been loaded, the Player will receive a boolean Attribute called <code>Loaded</code>.</p>"},{"location":"General/Modules/ServerStorage/Client/#provided-bindableevents","title":"Provided BindableEvents","text":""},{"location":"General/Modules/ServerStorage/Client/#moduleclientconnectedconnectfunc-player-player","title":"<code>module.ClientConnected:Connect(func: (player: Player))</code>","text":"<p>Fired when the Player's <code>Stats</code> data has loaded.</p>"},{"location":"General/Modules/ServerStorage/Client/#moduleplayeraddedconnectfunc-ply-player-neighborstats","title":"<code>module.PlayerAdded:Connect(func: (ply: Player, NeighborStats)</code>","text":""},{"location":"General/Modules/ServerStorage/Client/#moduleplayerremovingconnectfunc-ply-player-neighborstats","title":"<code>module.PlayerRemoving:Connect(func: (ply: Player, NeighborStats)</code>","text":""},{"location":"General/Modules/ServerStorage/Client/#modulecharacteraddedconnectfunc-ply-player-character-model-neighborstats","title":"<code>module.CharacterAdded:Connect(func: (ply: Player, character: Model, NeighborStats)</code>","text":""},{"location":"General/Modules/ServerStorage/Client/#getplayers","title":"<code>:GetPlayers()</code>","text":""},{"location":"General/Modules/ServerStorage/Client/#returns","title":"Returns","text":"<ul> <li>A <code>table</code> value with the Module's collected players. (doesn't look reliable)</li> </ul>"},{"location":"General/Modules/ServerStorage/DataStore/","title":"DataStore","text":"<p>Info</p> <p><code>game.ServerStorage.Modules.DataStore</code></p> <p>DataStore utilities.</p> <p>Has Encode and Decode utilities and a queue.</p> <p>Documentation is found in the Module itself, which also notes that it's an incomplete doc.</p>"},{"location":"General/Modules/ServerStorage/Filter/","title":"Filter","text":"<p>Info</p> <p><code>game.ServerStorage.Modules.Filter</code></p>"},{"location":"General/Modules/ServerStorage/Filter/#filtertextply-player-text-string","title":"<code>:FilterText(ply: Player, text: string)</code>","text":"<p>Runs <code>:FilterStringAsync(text, ply.UserId)</code></p>"},{"location":"General/Modules/ServerStorage/Filter/#returns","title":"Returns","text":"<ul> <li>A tuple, <code>:GetNonChatStringForBroadcastAsync(), true</code> or if failed <code>nil, true</code></li> </ul>"},{"location":"General/Modules/ServerStorage/Games/","title":"Games","text":"<p>Info</p> <p><code>game.ServerStorage.Modules.Games</code></p> <p>This is barely being used, function names should be straight forward though.</p> <p>Warning</p> <p>Incomplete</p>"},{"location":"General/Modules/ServerStorage/Games/#newgamename-minplayers-maxplayers","title":"<code>.new(gameName, minPlayers, maxPlayers)</code>","text":"<p>Constructor</p>"},{"location":"General/Modules/ServerStorage/Games/#returns","title":"Returns","text":"<ul> <li>A new object from the <code>GameClass</code></li> </ul>"},{"location":"General/Modules/ServerStorage/Party/","title":"Party","text":"<p>Info</p> <p><code>game.ServerStorage.Modules.Party</code></p> <p>A Module that does most of the Party system.</p>"},{"location":"General/Modules/ServerStorage/Party/#isplayerleaderply-player","title":"<code>:IsPlayerLeader(ply: Player)</code>","text":"<p>Whether the player is the party leader.</p>"},{"location":"General/Modules/ServerStorage/Party/#returns","title":"Returns","text":"<ul> <li><code>boolean</code></li> </ul>"},{"location":"General/Modules/ServerStorage/Party/#changepartyleadercurrentleader-player-newleader-player","title":"<code>:ChangePartyLeader(currentLeader: Player, newLeader: Player)</code>","text":"<p>Changes the Party Leader. This also changes the <code>PartyId</code> attribute. The <code>PartyId</code> is a Player's UserId.</p>"},{"location":"General/Modules/ServerStorage/Party/#getpartysizepartyid","title":"<code>:GetPartySize(partyId)</code>","text":"<p>Gets the party size...</p>"},{"location":"General/Modules/ServerStorage/Party/#returns_1","title":"Returns","text":"<ul> <li><code>number</code></li> </ul>"},{"location":"General/Modules/ServerStorage/Party/#doesplayerbelongtopartyply-player","title":"<code>:DoesPlayerBelongToParty(ply: Player)</code>","text":"<p>If the Player has not PartyId attribute, it would return <code>false</code>.</p>"},{"location":"General/Modules/ServerStorage/Party/#returns_2","title":"Returns","text":"<ul> <li><code>boolean</code></li> </ul>"},{"location":"General/Modules/ServerStorage/Party/#isplayerinpartyply-player-partyid","title":"<code>:IsPlayerInParty(ply: Player, partyId)</code>","text":"<p>Checks if the player is in the provided partyId.</p>"},{"location":"General/Modules/ServerStorage/Party/#returns_3","title":"Returns","text":"<ul> <li><code>boolean</code></li> </ul>"},{"location":"General/Modules/ServerStorage/Party/#getpartyidply-player","title":"<code>:GetPartyId(ply: Player)</code>","text":"<p>Gets the value of the attribute <code>PartyId</code> from a player.</p>"},{"location":"General/Modules/ServerStorage/Party/#returns_4","title":"Returns","text":"<ul> <li><code>number</code> PartyId or <code>nil</code></li> </ul>"},{"location":"General/Modules/ServerStorage/Party/#removeplayerfrompartyply-player-no_notif-boolean","title":"<code>:RemovePlayerFromParty(ply: Player, no_notif: boolean)</code>","text":"<p>Removes a player from a party, which also sets their <code>PartyId</code> attribute to <code>nil</code>.</p>"},{"location":"General/Modules/ServerStorage/Party/#parameters","title":"Parameters","text":"<ul> <li><code>no_notif</code>, whether the player should receive a notification.</li> </ul>"},{"location":"General/Modules/ServerStorage/Party/#addplayertopartyplayertobeadded-player-plypartyowner-player","title":"<code>:AddPlayerToParty(playerToBeAdded: Player, plyPartyOwner: Player)</code>","text":"<p>Adds a player to a party.</p>"},{"location":"General/Modules/ServerStorage/Party/#parameters_1","title":"Parameters","text":"<ul> <li><code>playerToBeAdded</code>, target player to be added to someone's party.</li> <li><code>plyPartyOwner</code>, this should be the player, that the target gets added to.</li> </ul> <p>It will set the <code>PartyId</code> to the UserId from <code>plyPartyOwner</code>.</p>"},{"location":"General/Modules/ServerStorage/Party/#returns_5","title":"Returns","text":"<ul> <li>A something useles...?</li> </ul>"},{"location":"General/Modules/ServerStorage/Party/#doesplayeracceptinvitesply-player","title":"<code>:DoesPlayerAcceptInvites(ply: Player)</code>","text":"<p>Whether the player accepts party invites. Gets the <code>DisablePartyInvites</code> attribute value, but inversed.</p>"},{"location":"General/Modules/ServerStorage/Party/#returns_6","title":"Returns","text":"<ul> <li><code>boolean</code></li> </ul>"},{"location":"General/Modules/ServerStorage/Party/#getpartymembersply-player","title":"<code>:GetPartyMembers(ply: Player)</code>","text":"<p>Returns the a table with players that are members of the player's party.</p>"},{"location":"General/Modules/ServerStorage/Party/#returns_7","title":"Returns","text":"<ul> <li><code>table: {Player}</code></li> </ul>"},{"location":"General/Modules/ServerStorage/Party/#getrawpartymembersply-player","title":"<code>:GetRawPartyMembers(ply: Player)</code>","text":"<p>Used for reconstructing parties after teleportation.</p>"},{"location":"General/Modules/ServerStorage/Party/#returns_8","title":"Returns","text":"<ul> <li><code>table: {number}</code>, a table with UserIds instead of Player.</li> </ul>"},{"location":"General/Modules/ServerStorage/Party/#getpartymembersofstateply-player-state","title":"<code>:GetPartyMembersOfState(ply: Player, state)</code>","text":"<p>Gets Party Members that match provided state.</p>"},{"location":"General/Modules/ServerStorage/Party/#returns_9","title":"Returns","text":"<ul> <li><code>table: {Player}</code></li> </ul>"},{"location":"General/Modules/ServerStorage/Party/#getpartymembers_matchedply-player","title":"<code>:GetPartyMembers_Matched(ply: Player)</code>","text":"<p>Preset function that does <code>:GetPartyMembersOfState(ply, 3)</code></p>"},{"location":"General/Modules/ServerStorage/Party/#getpartymembers_queuedply-player","title":"<code>:GetPartyMembers_Queued(ply: Player)</code>","text":"<p>Preset function that does <code>:GetPartyMembersOfState(ply, 2)</code></p>"},{"location":"General/Modules/ServerStorage/Party/#getpartyleaderply-player","title":"<code>:GetPartyLeader(ply: Player)</code>","text":"<p>If the player is in a party. It checks the <code>PartyId</code> to figure out who the leader is. Then returns the value.</p>"},{"location":"General/Modules/ServerStorage/Party/#returns_10","title":"Returns","text":"<ul> <li><code>Player</code>, which is the Party Leader</li> </ul>"},{"location":"General/Modules/ServerStorage/Prompt/","title":"Prompt","text":"<p>Info</p> <p><code>game.ServerStorage.Modules.Prompt</code></p> <p>This Module uses a Network event named <code>Prompt</code>.</p> <p>All of the prompts might just be purple though...</p>"},{"location":"General/Modules/ServerStorage/Prompt/#promptply-player-title-msg-duration-autoshow-boolean","title":"<code>:Prompt(ply: Player, title, msg, duration, autoshow: boolean)</code>","text":"<p>Sends one of those prompts at the top of someone's screen, e.g. Party Invites.</p> <p>The target player receives a prompt. The player can then click on the notification which opens a window where they can click on \"Yes\" or \"No\". If the duration expires the RemoteFunction will return <code>false</code>, same as if they click on \"No\".</p> <p>If they click on \"Yes\", it will return <code>true</code>.</p>"},{"location":"General/Modules/ServerStorage/Prompt/#returns","title":"Returns","text":"<ul> <li>Result from <code>Network:invoke</code> which triggers a <code>RemoteFunction</code>.</li> </ul>"},{"location":"General/Modules/ServerStorage/Proximity/","title":"Proximity","text":"<p>Info</p> <p><code>game.ServerStorage.Modules.Proximity</code></p>"},{"location":"General/Modules/ServerStorage/Proximity/#onsafetriggeredprompt-proximityprompt-callback","title":"<code>:OnSafeTriggered(prompt: ProximityPrompt, callback)</code>","text":"<p>Does some checks, like whether there's a Character, HumanoidRootPart, if they're being carried or are Ragdolled. Then this hardcoded compares the proximity range... If successful, will run and return the provided <code>callback</code>.</p>"},{"location":"General/Modules/ServerStorage/Proximity/#returns","title":"Returns","text":"<ul> <li>Result from <code>callback</code> or nothing if failed.</li> </ul>"},{"location":"General/Modules/ServerStorage/Ragdoll/","title":"Ragdoll","text":"<p>Info</p> <p><code>game.ServerStorage.Modules.Ragdoll</code></p>"},{"location":"General/Modules/ServerStorage/Ragdoll/#setragdollplychar-model-enableragdoll-duration-trip-boolean","title":"<code>:SetRagdoll(plyChar: Model, enableRagdoll, duration, trip: boolean)</code>","text":"<p>Ragdolls the player.</p>"},{"location":"General/Modules/ServerStorage/Ragdoll/#parameters","title":"Parameters","text":"<ul> <li><code>plyChar</code>: The character model.</li> <li><code>enableRagdoll</code>: Could be prevent Re-Ragdolling. If set to <code>true</code>, it won't ragdoll if already ragdolled. May be for <code>Utility:ChangeStat</code> to ragdoll the player, if this is set to <code>false</code> with a duration.</li> <li><code>duration</code>: How long the character should be ragdolled for.</li> <li><code>trip</code>: Whether to trip the character. Enabled <code>Humanoid.PlatformStand</code> on the client.</li> </ul>"},{"location":"General/Modules/ServerStorage/Ragdoll/#removeragdollplychar-model","title":"<code>:RemoveRagdoll(plyChar: Model)</code>","text":"<p>Unragdolls the player character. The rig is kept, for flexible ragdolling and unragdolling.</p>"},{"location":"General/Modules/ServerStorage/Ragdoll/#tripplychar-model-duration","title":"<code>:Trip(plyChar: Model, duration)</code>","text":"<p>Info</p> <p>Calls :SetRagdoll(), with pre-set parameters. No duration will just keep them ragdoll'd</p>"},{"location":"General/Modules/ServerStorage/Ragdoll/#clearplychar-model-bclearcompletly","title":"<code>:Clear(plyChar: Model, bClearCompletly)</code>","text":"<p>Info</p> <p>Removes the rig created by <code>:RigPlayer()</code> It's advised to clear the <code>RiggedUser</code> on the character's humanoid, or use <code>bClearCompletly</code>.</p>"},{"location":"General/Modules/ServerStorage/Ragdoll/#rigplayerplychar-model","title":"<code>:RigPlayer(plyChar: Model)</code>","text":"<p>Creates the physic instances required for a ragdoll to even work.</p> <p>Warning</p> <p>Check for the Humanoid's Attribute <code>RiggedUser</code> of the boolean type first. Because it could already be rigged.</p>"},{"location":"General/Modules/ServerStorage/Server/","title":"Server","text":"<p>Info</p> <p><code>game.ServerStorage.Modules.Server</code></p> <p>Server utility, also for Teleport and Listing.</p> <p>Utility for Listing would include, operations done to a Memory Store, so that data about the server list can be retrieved across game instances.</p> <p>A <code>Heartbeat</code> Connection gets created, that updates Server data of the own server this module is ran in.</p>"},{"location":"General/Modules/ServerStorage/Server/#gettick","title":"<code>:GetTick()</code>","text":"<p>Gets the server's tick. This is useful for syncinc things to Clients.</p>"},{"location":"General/Modules/ServerStorage/Server/#returns","title":"Returns","text":"<ul> <li><code>os.time()</code> from the server.</li> </ul>"},{"location":"General/Modules/ServerStorage/Server/#isserverexpiredpacket-job_id","title":"<code>:IsServerExpired(packet, job_id)</code>","text":""},{"location":"General/Modules/ServerStorage/Server/#generateuniqueidentifier","title":"<code>:GenerateUniqueIdentifier()</code>","text":""},{"location":"General/Modules/ServerStorage/Server/#iscurrentidentifierunique","title":"<code>:IsCurrentIdentifierUnique()</code>","text":""},{"location":"General/Modules/ServerStorage/Server/#returns_1","title":"Returns","text":"<ul> <li><code>boolean</code></li> </ul>"},{"location":"General/Modules/ServerStorage/Server/#getserverinfofromidplaceid-number","title":"<code>:GetServerInfoFromId(placeId: number)</code>","text":""},{"location":"General/Modules/ServerStorage/Server/#returns_2","title":"Returns","text":"<ul> <li>A <code>tuple</code>, <code>serverInfo, name: string</code>. Name can be <code>VC</code> or <code>NON_VC</code>.</li> </ul>"},{"location":"General/Modules/ServerStorage/Server/#getmostplayerscountry","title":"<code>:GetMostPlayersCountry()</code>","text":""},{"location":"General/Modules/ServerStorage/Server/#buildserverpacket","title":"<code>:BuildServerPacket()</code>","text":"<p>This is ran by the Module itself upon <code>require()</code>.</p>"},{"location":"General/Modules/ServerStorage/Server/#encodepacketpacket","title":"<code>:EncodePacket(packet)</code>","text":""},{"location":"General/Modules/ServerStorage/Server/#returns_3","title":"Returns","text":"<ul> <li>Encoded packet table data.</li> </ul>"},{"location":"General/Modules/ServerStorage/Server/#decodepacketpacket","title":"<code>:DecodePacket(packet)</code>","text":""},{"location":"General/Modules/ServerStorage/Server/#returns_4","title":"Returns","text":"<ul> <li>Decoded packet table data.</li> </ul>"},{"location":"General/Modules/ServerStorage/Server/#filterserverlistserver_list","title":"<code>:FilterServerList(server_list)</code>","text":"<p>Makes modifications to the provided <code>server_list</code> argument.</p>"},{"location":"General/Modules/ServerStorage/Server/#getlatestservers","title":"<code>:GetLatestServers()</code>","text":"<p>Gets something from a Memory Store. But this doesn't return.</p>"},{"location":"General/Modules/ServerStorage/Server/#returns_5","title":"Returns","text":"<ul> <li>Returns <code>true</code> if succeeded.</li> </ul>"},{"location":"General/Modules/ServerStorage/Server/#sendserverpacket","title":"<code>:SendServerPacket()</code>","text":"<p>This could be sending the own server packet, from where this Module is ran.</p>"},{"location":"General/Modules/ServerStorage/Server/#buildservermap","title":"<code>:BuildServerMap()</code>","text":"<p>Organized all servers into a map.</p>"},{"location":"General/Modules/ServerStorage/Server/#sendplayertojobidplayer-place_id-number-job_id-string-teleportdata-any","title":"<code>:SendPlayerToJobId(player, place_id: number, job_id: string, teleportData: any)</code>","text":"<p>Runs <code>TeleportService:TeleportToPlaceInstance(place_id, job_id, player, nil, teleportData)</code>.</p>"},{"location":"General/Modules/ServerStorage/Server/#sendplayertoplaceplayer-place_id-number-teleportdata-any","title":"<code>:SendPlayerToPlace(player, place_id: number, teleportData: any)</code>","text":"<p>Runs <code>TeleportService:Teleport(place_id, player, teleportData)</code>.</p>"},{"location":"General/Modules/ServerStorage/Utility/","title":"Utility","text":"<p>Info</p> <p><code>game.ServerStorage.Modules.Utility</code></p>"},{"location":"General/Modules/ServerStorage/Utility/#changestatinstance-instance-attrname-string-attrvalue-duration","title":"<code>:ChangeStat(instance: Instance, attrName: string, attrValue, duration)</code>","text":"<p>Utility to change Attribute values on things.</p>"},{"location":"General/Modules/ServerStorage/Utility/#parameters","title":"Parameters","text":"<ul> <li><code>instance</code>: What thing should be changed</li> <li><code>attrName</code>: Attribute name</li> <li><code>attrValue</code>: What to set the value to</li> <li><code>duration</code>: How long it should last. Which creates the a string that is \"nameTime\", \"Time\" gets additionally added, which tracks the time, that is in os.clock() and duration.</li> </ul> <p>Note</p> <p>Why... is it using os.clock()...</p>"},{"location":"General/Modules/ServerStorage/Utility/#getrendercframechar-model","title":"<code>:GetRenderCFrame(char: Model)</code>","text":"<p>Returns an approximate CFrame of where the character actually is in VR.</p>"},{"location":"General/Modules/ServerStorage/Utility/#getplayersinfrontchar-model-range-angle-tool_cframe","title":"<code>:GetPlayersInFront(char: Model, range, angle, tool_CFrame)</code>","text":"<p>Gets players infront of the specified character. Even for VR.</p>"},{"location":"General/Modules/ServerStorage/Utility/#returns","title":"Returns","text":"<ul> <li>A table with Character Models.</li> </ul>"},{"location":"General/Modules/ServerStorage/Utility/#getnearestplayerinfrontchar-model-range-angle-tool_cframe","title":"<code>:GetNearestPlayerInFront(char: Model, range, angle, tool_CFrame)</code>","text":"<p>Similar to before, except the nearest player.</p>"},{"location":"General/Modules/ServerStorage/Utility/#returns_1","title":"Returns","text":"<ul> <li>The nearest character model.</li> </ul>"},{"location":"General/Modules/ServerStorage/Utility/#getnearestplayerinfrontwithblacklistchar-model-range-blacklist-angle-tool_cframe","title":"<code>:GetNearestPlayerInFrontWithBlacklist(char: Model, range, blacklist, angle, tool_CFrame)</code>","text":""},{"location":"General/Modules/ServerStorage/Utility/#returns_2","title":"Returns","text":"<ul> <li>The nearest character model.</li> </ul>"},{"location":"General/Modules/ServerStorage/Utility/#insafezoneply-player-no_error-boolean","title":"<code>:InSafezone(ply: Player, no_error: boolean)</code>","text":"<p>Whether a player is in a safezone or not.</p>"},{"location":"General/Modules/ServerStorage/Utility/#parameters_1","title":"Parameters","text":"<ul> <li><code>no_error</code>: Whether to display pop-ups if or if not in a safezone.</li> </ul>"},{"location":"General/Modules/ServerStorage/Utility/#returns_3","title":"Returns","text":"<ul> <li><code>boolean</code>, whether in a safezone or not</li> </ul>"},{"location":"General/Modules/ServerStorage/Utility/#canplayerusetoolply-player-targetplayer-model-tool","title":"<code>:CanPlayerUseTool(ply: Player, targetPlayer: Model, tool)</code>","text":"<p>Whether a player can use a tool on a specific target player.</p> <p>This checks things like, if the tool is on a cooldown, or if the target player, is in a safezone.</p>"},{"location":"General/Modules/ServerStorage/Utility/#returns_4","title":"Returns","text":"<ul> <li><code>boolean</code></li> </ul>"},{"location":"General/Modules/ServerStorage/Utility/#getplayeroftooltool-tool","title":"<code>:GetPlayerOfTool(tool: Tool)</code>","text":"<p>Gets the current player of a Tool. From the Backpack or Character Model, for instance.</p>"},{"location":"General/Modules/ServerStorage/Utility/#returns_5","title":"Returns","text":"<ul> <li><code>Player</code></li> </ul>"},{"location":"General/Modules/ServerStorage/Utility/#gettoolbynameply-player-toolname","title":"<code>:GetToolByName(ply: Player, toolName)</code>","text":"<p>Tries to get a tool from a player, purely based on a string name input.</p>"},{"location":"General/Modules/ServerStorage/Utility/#returns_6","title":"Returns","text":"<ul> <li><code>Tool</code> or <code>nil</code> if not found.</li> </ul>"},{"location":"General/Modules/ServerStorage/Utility/#playanimationchar-model-animation-tween_speed","title":"<code>:PlayAnimation(char: Model, animation, tween_speed)</code>","text":""},{"location":"General/Modules/ServerStorage/Utility/#returns_7","title":"Returns","text":"<ul> <li><code>AnimationTrack</code></li> </ul>"},{"location":"General/Modules/ServerStorage/Utility/#playanimationsound-part","title":"<code>:PlayAnimation(sound, part)</code>","text":"<p>Plays a sound on a part. The sound gets cloned and then returned (note that it's on a Debris through this function).</p>"},{"location":"General/Modules/ServerStorage/Utility/#pickrandomweightedchances","title":"<code>:PickRandomWeighted(chances: {})</code>","text":"<p>Picks a random weighted value from a given table.</p>"},{"location":"General/Modules/ServerStorage/Utility/#returns_8","title":"Returns","text":"<p>Should return the picked key.</p> Example Table <pre><code>local chances = {\n    Good = 60,\n    Bad = 40\n}\n</code></pre>"},{"location":"General/Modules/ServerStorage/Utility/#jumpscareplayerjumpscarer-player-playertojumpscare-player","title":"<code>:JumpscarePlayer(jumpscarer: Player, playerToJumpscare : Player)</code>","text":"<p>Jumpscares a player.</p>"},{"location":"General/Modules/ServerStorage/Utility/#settoolcooldownply-player-tool-cooldownduration","title":"<code>:SetToolCooldown(ply: Player, Tool, cooldownDuration)</code>","text":"<p>Sets a cooldown on a tool for the backpack system.</p>"},{"location":"General/Modules/ServerStorage/Utility/#istoolcooldownply-player-tool-no_error","title":"<code>:IsToolCooldown(ply: Player, Tool, no_error)</code>","text":"<p>Checks if a tool has a cooldown.</p>"},{"location":"General/Modules/ServerStorage/Utility/#parameters_2","title":"Parameters","text":"<ul> <li><code>no_error</code> won't play an error sound if set to <code>true</code>.</li> </ul>"},{"location":"General/Modules/ServerStorage/Utility/#returns_9","title":"Returns","text":"<ul> <li>A folder. Unsure about its use.</li> </ul>"},{"location":"General/Modules/ServerStorage/Utility/#unequipvehicletoolply-player","title":"<code>:UnequipVehicleTool(ply: Player)</code>","text":"<p>Info</p> <p>Unsure</p>"},{"location":"General/Modules/ServerStorage/Utility/#getstatsply-player","title":"<code>:GetStats(ply: Player)</code>","text":""},{"location":"General/Modules/ServerStorage/Utility/#returns_10","title":"Returns","text":"<ul> <li>Something like <code>typeof(ServerStorage.Modules.DataStore.Default)</code> it's a folder structure. Most likely the Player Stats.</li> </ul>"},{"location":"General/Modules/ServerStorage/VR/","title":"VR","text":"<p>Info</p> <p><code>game.ServerStorage.Modules.VR</code></p> <p>If this Module gets required, it stores own data.</p> <p>Warning</p> <p>Eventually incomplete docs.</p>"},{"location":"General/Modules/ServerStorage/VR/#doesplayerhavevrplayer-player","title":"<code>:DoesPlayerHaveVR(player: Player)</code>","text":""},{"location":"General/Modules/ServerStorage/VR/#returns","title":"Returns","text":"<ul> <li><code>boolean</code> from <code>:GetAttribute(\"VR\")</code></li> </ul>"},{"location":"General/Modules/ServerStorage/VR/#getusercframeply-player-user_cframe-enumusercframe","title":"<code>:GetUserCFrame(ply: Player, user_CFrame: Enum.UserCFrame)</code>","text":""},{"location":"General/Modules/ServerStorage/VR/#returns_1","title":"Returns","text":"<ul> <li>Apparently <code>CFrame</code></li> </ul>"},{"location":"General/Modules/ServerStorage/VR/#getworldusercframeplayer-player-user_cframe-enumusercframe","title":"<code>:GetWorldUserCFrame(player: Player, user_cframe : Enum.UserCFrame)</code>","text":""},{"location":"General/Modules/ServerStorage/VR/#returns_2","title":"Returns","text":"<ul> <li>Result from <code>self:GetUserCFrame(player, user_CFrame)</code></li> </ul>"},{"location":"General/Modules/ServerStorage/VR/#getadjustedrootpartcframeply-player","title":"<code>:GetAdjustedRootPartCFrame(ply: Player)</code>","text":""},{"location":"General/Modules/ServerStorage/VR/#returns_3","title":"Returns","text":"<ul> <li>A result from a <code>CFrame.lookAt</code></li> </ul>"},{"location":"General/Modules/ServerStorage/VR/#getadjustedrootpartcframewithoutyply-player","title":"<code>:GetAdjustedRootPartCFrameWithoutY(ply: Player)</code>","text":""},{"location":"General/Modules/ServerStorage/VR/#returns_4","title":"Returns","text":"<ul> <li>A result from a <code>CFrame.lookAt</code></li> </ul>"},{"location":"General/Modules/ServerStorage/VR/#updateusercframesfrompacketply-player-packet","title":"<code>::UpdateUserCFramesFromPacket(ply: Player, packet)</code>","text":""},{"location":"General/Modules/ServerStorage/VR/#listenforvelocitytool-tool-velocity-callback","title":"<code>:ListenForVelocity(tool: Tool, velocity, callback)</code>","text":"<p>Creates a <code>RemoteEvent</code>. Unsure about the purpose.</p>"},{"location":"General/Modules/ServerStorage/Voice/","title":"Voice","text":"<p>Info</p> <p><code>game.ServerStorage.Modules.Voice</code></p>"},{"location":"General/Modules/ServerStorage/Voice/#doesplayerhavevcplayer-player","title":"<code>:DoesPlayerHaveVC(player: Player)</code>","text":"<p>Whether a player has VC or not. There can also be a few set of users that just return this on true. Otherwise this just uses Roblox functions.</p>"},{"location":"General/Modules/ServerStorage/Tools/Carry/","title":"Carry","text":"<p>Info</p> <p><code>game.ServerStorage.Modules.Tools.Carry</code></p>"},{"location":"General/Modules/ServerStorage/Tools/Carry/#carryplychar-model-targetchar-model-carry_type-ignore","title":"<code>:Carry(plyChar: Model, targetChar: Model, carry_type, ignore)</code>","text":"<p>Tries to make a character carry a target character. This has checks, and carry won't work depending on certain values.</p>"},{"location":"General/Modules/ServerStorage/Tools/Carry/#parameters","title":"Parameters","text":"<ul> <li><code>plyChar</code>: The player character that should carry people (bully).</li> <li><code>targetChar</code>: The target character that should get carried (victim).</li> <li><code>carry_type</code>: Type of carry or <code>\"Default\"</code>, see Character Attributes.</li> <li><code>ignore</code>: Don't check if already carrying someone. Useful for things like the Pitchfork.</li> </ul> <p>The carrying player character would receive a <code>Carrying</code> attribute. And the target player character would receive <code>Carried</code> and <code>CarriedType</code> attribute.</p>"},{"location":"General/Modules/ServerStorage/Tools/Carry/#getbullyfromcharacterplychar-model","title":"<code>:GetBullyFromCharacter(plyChar: Model)</code>","text":"<p>If a player is being carried, this function can be used on that player, to find out who is carrying them, aka. who's bullying them.</p>"},{"location":"General/Modules/ServerStorage/Tools/Carry/#returns","title":"Returns","text":"<p>The player's character, that is carrying the player.</p>"},{"location":"General/Modules/ServerStorage/Tools/Carry/#getvictimfromcharacterplychar-model","title":"<code>:GetVictimFromCharacter(plyChar: Model)</code>","text":"<p>If a player is carrying someone but we don't know who. We can use this function to find out who is being carried, aka. who is the victim of the carry.</p>"},{"location":"General/Modules/ServerStorage/Tools/Carry/#returns_1","title":"Returns","text":"<p>Info</p> <p>The player's character that is being carried.</p>"},{"location":"General/Modules/ServerStorage/Tools/Carry/#getcarrytypevictimchar","title":"<code>:GetCarryType(victimChar)</code>","text":"<p>Returns the value of <code>CarriedType</code> or <code>\"Default\"</code> of a character that is a victim of a carry.</p>"},{"location":"General/Modules/ServerStorage/Tools/Carry/#droptargetchar-model-forced-bullychar","title":"<code>:Drop(targetChar: Model, forced, bullyChar, ...)</code>","text":"<p>Seems to be responsible for dropping. Each carry type has another <code>:Drop</code> function which's parameters differ from this one.</p>"},{"location":"General/Modules/ServerStorage/Tools/Carry/#parameters_1","title":"Parameters","text":"<ul> <li><code>targetChar</code>: The character that is being carried. The Victim.</li> <li><code>bullyChar</code>: The character that is carrying people.</li> <li><code>forced</code>: Force drop.</li> <li><code>...</code>: Seems to have no use.</li> </ul>"},{"location":"General/Modules/ServerStorage/Tools/Carry/#findvictimanddropbullychar-forced","title":"<code>:FindVictimAndDrop(bullyChar, forced, ...)</code>","text":"<p>A combined function that uses <code>:GetVictimFromCharacter</code> and <code>:Drop</code>.</p>"},{"location":"General/Modules/ServerStorage/Tools/Carry/#findbullyanddropvictimchar-forced","title":"<code>:FindBullyAndDrop(victimChar, forced, ...)</code>","text":"<p>A combined function that uses <code>:GetBullyFromCharacter</code> and <code>:Drop</code>.</p>"},{"location":"General/Modules/ServerStorage/Tools/Carry/#stopcarryanimationchar-model","title":"<code>:StopCarryAnimation(char: Model)</code>","text":"<p>Stops the carry animation on a character. Ment for the character, that is carrying a player (bully).</p>"},{"location":"General/Overview/Data/","title":"Data","text":"<p>Data seems to be stored and read from inside <code>ServerStorage</code> in a folder named <code>Stats</code>. Some data gets \"cached\" into the Player Attributes.</p> <p>A separate Server Script handles the data based from the <code>ServerStorage.Stats</code> folder.</p> <p>Not all of the data may be saved there though.</p>"},{"location":"General/Overview/Shop/Items/","title":"Items","text":"<p>Info</p> <p>The Items are stored in <code>game.ReplicatedStorage.Assets.Data.Store.Items</code> along with other things.</p>"},{"location":"General/Overview/Shop/Items/#adding-an-item","title":"Adding an Item","text":"<p>There's an exported type in the ModuleScript, that aids in creating a new item.</p> <p>Info</p> <pre><code>export type Item = {\n    Display: string,\n    Price: number,\n    Description: string,\n    Icon: string,\n    Tags: {string}?,\n    LimitedTime: { \n        Start: number,\n        End: number \n    }?,\n    Group: {\n        Name: string,\n        Order: number\n    },\n    Toxic: boolean,\n    QuestItem: boolean?,\n    Skins: string?,\n    Offsale: boolean?,\n    VerifiedOnly: boolean?,\n    AdultOnly: boolean?,\n    Original: number?,\n    GroupOnly: boolean?\n}\n</code></pre> <p>The table key should match the actual name of the Tool inside <code>game.ServerStorage.Assets.Tools</code>.</p> Example <p>Here's an example:</p> <pre><code>[\"Invisibility Potion\"] = {\n    Display = 'Invisibility Potion',\n    Price = math.huge,\n    Description = \"Makes you invisible.\",\n    Icon = TEMPICON,\n    Offsale = true,\n    Group = Type.Item.Normal,\n    Toxic = false\n},\n</code></pre>"},{"location":"General/Overview/Shop/Skins/","title":"Skins","text":"<p>Info</p> <p>The Items are stored in <code>game.ReplicatedStorage.Assets.Data.Store.Skins</code></p>"},{"location":"General/Overview/Shop/Skins/#adding-a-skin","title":"Adding a Skin","text":"<p>There's an exported type in the ModuleScript, that aids with the creation.</p> <p>Info</p> <pre><code>export type Rarity = 'Common' | 'Uncommon' | 'Rare' | 'Royalty' | 'Unique' | '???' | \"Collectible\";\n\n\nexport type Skin = {\n    Display: string;\n    Icon: string;\n    Rarity: Rarity?;\n    ItemType: string;\n    Order: number?;\n}\n</code></pre> <p>The table key should match the actual name of the Tool inside <code>game.ServerStorage.Assets.Skins[&lt;PARENT&gt;]</code>.</p> Example <p>Here's an example:</p> <pre><code>    [\"example_skin\"] = {\n    Display = \"Example Skin\",\n    Icon = 'rbxassetid://10198213112',\n},\n</code></pre>"},{"location":"General/Overview/Shop/Skins/#setting-up-a-skin","title":"Setting up a Skin","text":"<p>Skins are re-skins of items.</p> <p><code>Skins = \"example_case\"</code> this needs to be specified in the Item's configuration.</p> <p>The Item inside of <code>game.ServerStorage.Assets.Tools</code> needs to have <code>SkinConfig</code> Attributes specified, set to a <code>boolean</code> on <code>true</code>, for everything that should be copied onto the skin as well.</p> <p>Child Instances do not need the attribute. The actual's Tool script, can be tweaked to load different skin things. The Paper Bag can be an example, for the Paper Bag Models. Even if it's not really a good example.</p> <p>E.g. if you want to keep the script of an Item, in the Skin as well, it needs the <code>SkinConfig</code> Attribute. Otherwise things do not get inherited.</p>"},{"location":"General/Overview/Shop/Skins/#adding-a-case","title":"Adding a Case","text":"<p>Skins work with Cases.</p> Example <pre><code>    [\"example_case\"] = {\n        Description = \"An example case\",\n        Icon = 'rbxassetid://12502279412',\n        IconSize = 1,\n        Color = Color3.fromRGB(231, 231, 231),\n        Parent = \"Invisibility Potion\",\n        Price = 10,\n\n        Items = {\n            Common = {\"example_skin\"},\n            Uncommon = {},\n            Rare = {},\n            Royalty = {},\n            Unique = {},\n            ['???'] = {},\n            Collectible = {}\n        }\n    },\n</code></pre>"},{"location":"Networking/1/","title":"Networking","text":""},{"location":"Networking/Module/Client/","title":"Network Client","text":"<p>The Network client module is located in <code>game.ReplicatedStorage.Modules.Network</code></p> <p>Unlike on the Server's Module. This one doesn't have a Folder.</p>"},{"location":"Networking/Module/Client/#firestring","title":"<code>:fire(</code><code>string</code><code>...)</code>","text":"<p>Fires an event to the server</p>"},{"location":"Networking/Module/Client/#parameters","title":"Parameters","text":"<ul> <li>EventName <code>string</code></li> <li><code>...</code></li> </ul>"},{"location":"Networking/Module/Client/#returns","title":"Returns","text":"<ul> <li> <code>nil</code> </li> </ul> Example Usage <pre><code>local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")\nlocal Network = require(ReplicatedStorage.Modules.Network)\n\nNetwork:fire(\"ExampleEvent\", \"ExampleParameter\", \"AnotherParameter\")\n</code></pre>"},{"location":"Networking/Module/Client/#invokestring","title":"<code>:invoke(</code><code>string</code><code>...)</code>","text":"<p>Invokes an event on the server</p>"},{"location":"Networking/Module/Client/#parameters_1","title":"Parameters","text":"<ul> <li>EventName <code>string</code></li> <li><code>...</code></li> </ul>"},{"location":"Networking/Module/Client/#returns_1","title":"Returns","text":"<ul> <li><code>any</code></li> </ul> Example Usage <pre><code>local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")\nlocal Network = require(ReplicatedStorage.Modules.Network)\n\nlocal Result = Network:invoke(\"ExampleEvent\", \"ExampleParameter\", \"AnotherParameter\")\n</code></pre>"},{"location":"Networking/Module/Client/#listenevent_name-string-callback-any-any","title":"<code>:listen(event_name: string, callback: (...any) -&gt; ...any)</code>","text":""},{"location":"Networking/Module/Server/","title":"Network Server","text":"<p>The Network server module is located in <code>game.ServerStorage.Modules.Network</code></p> <p>A Folder inside <code>ReplicatedStorage</code> gets created, named \"Events\", the Server sees the original names, while the Client gets those obfuscated.</p> <p>An event can only be created on the server using <code>:create</code>.</p>"},{"location":"Networking/Module/Server/#firestring-player","title":"<code>:fire(</code><code>String</code>, <code>Player</code><code>, ...)</code>","text":"<p>Fires an event to the specified client.</p> <p>The function triggers <code>realRemoteEvent:FireClient(PlayerToFireTo, ...)</code>.</p>"},{"location":"Networking/Module/Server/#parameters","title":"Parameters","text":"<ul> <li>EventName <code>String</code></li> <li>PlayerToFireTo <code>Player</code></li> <li><code>...</code></li> </ul>"},{"location":"Networking/Module/Server/#returns","title":"Returns","text":"<ul> <li> <code>nil</code> </li> </ul> Example Usage <pre><code>local ServerStorage = game:GetService(\"ServerStorage\")\nlocal Network = require(ServerStorage.Modules.Network)\n\nNetwork:fire(\"ExampleEvent\", Player, \"ExampleParameter\", \"AnotherParameter\")\n</code></pre>"},{"location":"Networking/Module/Server/#fireradiusradius-number-_player-player-player-event_name-string","title":"<code>:fireradius(radius: number, _player: Player | {Player}, event_name: string, ...)</code>","text":""},{"location":"Networking/Module/Server/#fireallevent_name-string","title":"<code>:fireall(event_name: string, ...)</code>","text":""},{"location":"Networking/Module/Server/#fire_all_exceptplayer-player-event_name-string","title":"<code>::fire_all_except(player: Player, event_name: string, ...)</code>","text":""},{"location":"Networking/Module/Server/#invokefail_time-number-event_name-string-player-player","title":"<code>:invoke(fail_time: number, event_name: string, player: Player, ...)</code>","text":"<p>Fires an event to the specified client.</p> <p>The function triggers <code>realRemoteFunction:InvokeClient(player, ...)</code>.</p>"},{"location":"Networking/Module/Server/#listenevent_name-string-_type-eventtype-callback-player-any-any","title":"<code>:listen(event_name: string, _type: EventType, callback: (Player, ...any) -&gt; (...any))</code>","text":""},{"location":"Networking/Module/Server/#createevent_name-string-_type-eventtype","title":"<code>:create(event_name: string, _type: EventType)</code>","text":""},{"location":"VR%20Development/VRSupport/","title":"Adding VR support to Tools","text":""},{"location":"VR%20Development/VRSupport/#you-may-need-to-do-the-following-to-add-vr-support","title":"You may need to do the following to add VR support:","text":"<ul> <li>Use the <code>:ListenForVelocity()</code> function to activate tools only when the user swings their arm</li> <li>Add additional button listeners to detect button inputs from the VR controller</li> <li>Modify the <code>:GetNearestPlayersInFront()</code> function to use the character\u2019s right hand controller instead of HumanoidRootPart (example: Clippers)</li> </ul>"},{"location":"VR%20Development/VRSupport/#other-important-information","title":"Other important information:","text":"<ul> <li>You cannot use the character\u2019s Root part orientation, it won\u2019t be accurate. Use <code>:GetAdjustedRootPartCFrame()</code></li> </ul>"},{"location":"VR%20Development/Module/Client/","title":"VR Client","text":"<p>The VR client module is located in <code>game.ReplicatedStorage.Modules.VR</code></p>"},{"location":"VR%20Development/Module/Client/#gethandpositionusercframe-vector3","title":"<code>:GetHandPosition(</code><code>UserCFrame</code><code>) \u2192</code><code>Vector3</code>","text":"<p>Returns the position of a UserCFrame</p>"},{"location":"VR%20Development/Module/Client/#parameters","title":"Parameters","text":"<ul> <li><code>UserCFrame</code></li> </ul>"},{"location":"VR%20Development/Module/Client/#returns","title":"Returns","text":"<ul> <li><code>Vector3</code></li> </ul> Example Usage <pre><code>local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")\nlocal VRModule = require(ReplicatedStorage.Modules.VR)\n\nlocal HandPosition = VRModule:GetHandPosition(Enum.UserCFrame.Head)\n</code></pre>"},{"location":"VR%20Development/Module/Client/#gethandvelocityusercframe-vector3","title":"<code>:GetHandVelocity(</code><code>UserCFrame</code><code>) \u2192</code><code>Vector3</code>","text":"<p>Returns the velocity vector of any of the controllers. This function is often used when adding VR support to tools.</p>"},{"location":"VR%20Development/Module/Client/#parameters_1","title":"Parameters","text":"<ul> <li><code>UserCFrame</code></li> </ul>"},{"location":"VR%20Development/Module/Client/#returns_1","title":"Returns","text":"<ul> <li><code>Vector3</code></li> </ul> Example Usage <pre><code>local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")\nlocal VRModule = require(ReplicatedStorage.Modules.VR)\n\nlocal HandVelocity = VRModule:GetHandVelocity(Enum.UserCFrame.Head)\n</code></pre>"},{"location":"VR%20Development/Module/Client/#getrelativevectortoheadvector3-cframe","title":"<code>:GetRelativeVectorToHead(</code><code>Vector3</code><code>) \u2192</code><code>CFrame</code>","text":"<p>Converts a world position to a position relative to the camera (head).</p>"},{"location":"VR%20Development/Module/Client/#parameters_2","title":"Parameters","text":"<ul> <li><code>Vector3</code></li> </ul>"},{"location":"VR%20Development/Module/Client/#returns_2","title":"Returns","text":"<ul> <li><code>CFrame</code></li> </ul> Example Usage <pre><code>local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")\nlocal VRModule = require(ReplicatedStorage.Modules.VR)\n\nlocal WorldPosition = Vector3.new(0, 0, 0)\nlocal HandVelocity = VRModule:GetRelativeVectorToHead(WorldPosition)\n</code></pre>"},{"location":"VR%20Development/Module/Server/","title":"VR Server","text":"<p>The VR server module is located in <code>game.ServerStorage.Modules.VR</code></p>"},{"location":"VR%20Development/Module/Server/#getusercframeusercframe-cframe","title":"<code>:GetUserCFrame(</code><code>UserCFrame</code><code>) \u2192</code><code>CFrame</code>","text":"<p>This function should not be used!</p> <p>Returns the controller <code>CFrame</code>. </p>"},{"location":"VR%20Development/Module/Server/#parameters","title":"Parameters","text":"<ul> <li><code>UserCFrame</code></li> </ul>"},{"location":"VR%20Development/Module/Server/#returns","title":"Returns","text":"<ul> <li><code>CFrame</code></li> </ul> Example Usage <pre><code>local ServerStorage = game:GetService(\"ServerStorage\")\nlocal ServerVRModule = require(ServerStorage.Modules.VR)\n\nlocal UserCFrame = ServerVRModule:GetUserCFrame(Enum.UserCFrame.Head)\n</code></pre>"},{"location":"VR%20Development/Module/Server/#getworldusercframeusercframe-cframe","title":"<code>:GetWorldUserCFrame(</code><code>UserCFrame</code><code>) \u2192</code><code>CFrame</code>","text":"<p>This function should not be used!</p> <p>This function is identical to the one above currently.</p> <p>Returns the controller <code>CFrame</code>. </p>"},{"location":"VR%20Development/Module/Server/#parameters_1","title":"Parameters","text":"<ul> <li><code>UserCFrame</code></li> </ul>"},{"location":"VR%20Development/Module/Server/#returns_1","title":"Returns","text":"<ul> <li><code>CFrame</code></li> </ul> Example Usage <pre><code>local ServerStorage = game:GetService(\"ServerStorage\")\nlocal ServerVRModule = require(ServerStorage.Modules.VR)\n\nlocal UserCFrame = ServerVRModule:GetWorldUserCFrame(Enum.UserCFrame.Head)\n</code></pre>"},{"location":"VR%20Development/Module/Server/#listenforvelocitytoolforces-vector3callback","title":"<code>:ListenForVelocity(</code><code>Tool</code><code></code><code>Forces &lt;Vector3&gt;</code><code></code><code>Callback</code>)","text":"<p>Runs the callback function when the user swings their arm or arms in a certain direction or with a certain amount of force.</p>"},{"location":"VR%20Development/Module/Server/#parameters_2","title":"Parameters","text":"<ul> <li><code>Tool</code></li> <li><code>Forces</code></li> <li><code>Callback</code></li> </ul>"},{"location":"VR%20Development/Module/Server/#returns_2","title":"Returns","text":"<ul> <li> <code>nil</code> </li> </ul> Check the following tools for examples <ul> <li>Slap</li> <li>Shove</li> </ul> Example Usage <pre><code>local ServerStorage = game:GetService(\"ServerStorage\")\nlocal ServerVRModule = require(ServerStorage.Modules.VR)\n\nServerVRModule:ListenForVelocity(Tool, {Vector3.new()}, function()\n    -- Do whatever\nend)\n</code></pre>"},{"location":"VR%20Development/Module/Server/#getadjustedrootpartcframeplayer-cframe","title":"<code>:GetAdjustedRootPartCFrame(</code><code>Player</code><code>) \u2192</code><code>CFrame</code>","text":"<p>Returns the character\u2019s real root part CFrame adjusted for VR.</p>"},{"location":"VR%20Development/Module/Server/#parameters_3","title":"Parameters","text":"<ul> <li><code>Player</code></li> </ul>"},{"location":"VR%20Development/Module/Server/#returns_3","title":"Returns","text":"<ul> <li><code>CFrame</code></li> </ul> Example Usage <pre><code>local ServerStorage = game:GetService(\"ServerStorage\")\nlocal ServerVRModule = require(ServerStorage.Modules.VR)\n\nlocal AdjustedCFrame = ServerVRModule:GetAdjustedRootPartCFrame(Player)\n</code></pre>"},{"location":"VR%20Development/Module/Server/#getadjustedrootpartcframewithoutyplayer-cframe","title":"<code>:GetAdjustedRootPartCFrameWithoutY(</code><code>Player</code><code>) \u2192</code><code>CFrame</code>","text":"<p>Returns the character\u2019s real root part CFrame adjusted for VR projected onto the XZ plane.</p>"},{"location":"VR%20Development/Module/Server/#parameters_4","title":"Parameters","text":"<ul> <li><code>Player</code></li> </ul>"},{"location":"VR%20Development/Module/Server/#returns_4","title":"Returns","text":"<ul> <li><code>CFrame</code></li> </ul> Example Usage <pre><code>local ServerStorage = game:GetService(\"ServerStorage\")\nlocal ServerVRModule = require(ServerStorage.Modules.VR)\n\nlocal AdjustedCFrameNoY = ServerVRModule:GetAdjustedRootPartCFrameWithoutY(Player)\n</code></pre>"}]}